{"version":3,"sources":["_reset.scss","style.css","style.scss","_mixins.scss","_variables.scss"],"names":[],"mappings":"AAAQ,iGAAA;AAER;EACI,SAAA;EACA,UAAA;EACA,sBAAA;EACA,sCAAA;ACAJ;;ADEA;EACI,gBAAA;ACCJ;;ADCA;EACI,qBAAA;ACEJ;;ACPA;EACI,cAAA;EACA,wBAAA;ADUJ;AEbM;EDCN;IAIQ,2BAAA;EDYN;AACF;AElBM;EDCN;IAOQ,2BAAA;EDcN;AACF;;ACXA;EACI,aAAA;EACA,8BAAA;EACA,mBAAA;ADcJ;ACbI;EACI,eAAA;ADeR;ACdQ;EACI,aAAA;ADgBZ;ACfY;EACI,eAAA;ADiBhB;ACfY;EACI,sBAAA;EACA,cAAA;EACA,cE1BC;AH2CjB;AChBgB;EACI,cEhCN;AHkDd;;ACXA;EACI,yBElCgB;AHgDpB;;ACXA;EACI,yBEvCmB;AHqDvB;;ACXA;EACI,yBE1CgB;AHwDpB;;ACXA;EACI,yBEpDU;EFqDV,eAAA;EACA,cElDa;AHgEjB;ACbI;EACI,cEpDS;AHmEjB","file":"style.css","sourcesContent":["@import url('https://fonts.googleapis.com/css2?family=Public+Sans:wght@300;400;700&display=swap');\n\n*{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: 'Public Sans', sans-serif;\n}\nul{\n    list-style: none;\n}\na{\n    text-decoration: none;\n}\n","@import url(\"https://fonts.googleapis.com/css2?family=Public+Sans:wght@300;400;700&display=swap\");\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  font-family: \"Public Sans\", sans-serif;\n}\n\nul {\n  list-style: none;\n}\n\na {\n  text-decoration: none;\n}\n\n.container {\n  margin: 0 auto;\n  width: calc(100% - 4rem);\n}\n@media (min-width: 1200px) {\n  .container {\n    width: calc(1200px - 10rem);\n  }\n}\n@media (min-width: 1400px) {\n  .container {\n    width: calc(1400px - 10rem);\n  }\n}\n\nheader {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\nheader nav {\n  padding: 1rem 0;\n}\nheader nav ul {\n  display: flex;\n}\nheader nav ul > li {\n  padding: 0.5rem;\n}\nheader nav ul a {\n  padding: 0.5rem 0.5rem;\n  display: block;\n  color: #9698a6;\n}\nheader nav ul a:hover {\n  color: #2d314d;\n}\n\nsection.introduce {\n  background-color: #fafafa;\n}\n\nsection.benefits {\n  background-color: #f3f4f6;\n}\n\nsection.articles {\n  background-color: #fafafa;\n}\n\nfooter {\n  background-color: #2d314d;\n  padding: 2rem 0;\n  color: #9698a6;\n}\nfooter a {\n  color: #9698a6;\n}","@use \"sass:map\";\n@use \"sass:list\";\n\n@import 'variables';\n@import 'reset';\n@import 'mixins';\n\n.container{\n    margin: 0 auto;\n    width: calc(100% - 4rem);\n    @include respond-above(lg){\n        width: calc(map.get($breakpoints, lg) - 10rem);\n    }\n    @include respond-above(xl){\n        width: calc(map.get($breakpoints, xl) - 10rem);\n    }\n}\n\nheader{\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    nav{\n        padding: 1rem 0;\n        ul{\n            display: flex;\n            > li{\n                padding: 0.5rem; \n            }\n            a{\n                padding: 0.5rem 0.5rem;\n                display: block;\n                color: $c_grayish_blue;\n                &:hover{\n                    color: $c_dark_blue;\n                }\n            }\n        }\n    }\n}\n\nsection.introduce{\n    background-color: $c_very_light_gray;\n}\n\nsection.benefits{\n    background-color: $c_light_grayish_blue;\n}\n\nsection.articles{\n    background-color: $c_very_light_gray;\n}\n\nfooter{\n    background-color: $c_dark_blue;\n    padding: 2rem 0;\n    color: $c_grayish_blue;\n    a{\n        color: $c_grayish_blue;\n    }\n}\n","\n// $and: '(orientation: landscape)\n\n@mixin respond-above($breakpoint) {\n    @if map-has-key($breakpoints, $breakpoint) {\n      $breakpoint-value: map-get($breakpoints, $breakpoint);\n      @media (min-width: $breakpoint-value) {\n        @content;\n      }\n    } @else {\n      @warn 'Invalid breakpoint: #{$breakpoint}.';\n    }\n  }\n\n@mixin respond-below($breakpoint){\n  @if map-has-key($breakpoints, $breakpoint) {\n    $breakpoint-value: map-get($breakpoints, $breakpoint);\n    @media (max-width: ($breakpoint-value - 1)) {\n      @content;\n    }\n  } @else {\n    @warn 'Invalid breakpoint: #{$breakpoint}.';\n  }\n}\n\n@mixin respond-between($lower, $upper) {\n  @if map-has-key($breakpoints, $lower) and map-has-key($breakpoints, $upper) {\n    $lower-breakpoint: map-get($breakpoints, $lower);\n    $upper-breakpoint: map-get($breakpoints, $upper);\n    @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {\n      @content;\n    }\n  } @else {\n    @if (map-has-key($breakpoints, $lower) == false) {\n      @warn 'Your lower breakpoint was invalid: #{$lower}.';\n    }\n    @if (map-has-key($breakpoints, $upper) == false) {\n      @warn 'Your upper breakpoint was invalid: #{$upper}.';\n    }\n  }\n}\n","// COLORS\n\n$c_dark_blue: hsl(233, 26%, 24%);\n$c_lime_green: hsl(136, 65%, 51%);\n$c_bright_gyan: hsl(192, 70%, 51%);\n\n$c_grayish_blue: hsl(233, 8%, 62%);\n$c_light_grayish_blue: hsl(220, 16%, 96%);\n$c_very_light_gray: hsl(0, 0%, 98%);\n\n\n// Breakpoints:\n$breakpoints: (\n  xs: 576px,\n  sm: 768px,\n  md: 992px,\n  lg: 1200px,\n  xl: 1400px\n);\n"]}